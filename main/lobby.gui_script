local network = require "main.network_manager"
local M = {}

function init(self)
    self.back_button   = gui.new_text_node(vmath.vector3(40, 1070, 0), "Back")
    self.create_button = gui.new_text_node(vmath.vector3(320, 900, 0), "Create Room")
    self.list_button   = gui.new_text_node(vmath.vector3(320, 820, 0), "Room List")
    self.chat_origin   = vmath.vector3(20, 700, 0)
    self.chat_nodes    = {}
    gui.set_font(self.back_button, hash("/builtins/fonts/system_font.font"))
    gui.set_font(self.create_button, hash("/builtins/fonts/system_font.font"))
    gui.set_font(self.list_button, hash("/builtins/fonts/system_font.font"))
    network.start(false)
end

local function add_chat(self, msg)
    local pos = self.chat_origin + vmath.vector3(0, #self.chat_nodes * 20, 0)
    local node = gui.new_text_node(pos, msg)
    gui.set_font(node, hash("/builtins/fonts/system_font.font"))
    table.insert(self.chat_nodes, node)
end

function update(self, dt)
    network.update(dt, function(m) add_chat(self, m) end)
end

function on_input(self, action_id, action)
    if action_id == hash("touch") and action.released then
        local pos = vmath.vector3(action.x, action.y, 0)
        if gui.pick_node(self.back_button, pos) then
            network.stop()
            local proxy = msg.url("/main#mainproxy")
            msg.post(proxy, "load")
        elseif gui.pick_node(self.create_button, pos) then
            network.become_server()
        elseif gui.pick_node(self.list_button, pos) then
            network.broadcast_hello()
        end
    end
end

function on_message(self, message_id, message, sender)
    if message_id == hash("proxy_loaded") then
        msg.post(sender, "enable")
    end
end

return M
